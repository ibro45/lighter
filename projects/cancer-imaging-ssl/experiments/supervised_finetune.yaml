project: ./projects/cancer-imaging-ssl

trainer:
    _target_: pytorch_lightning.Trainer
    benchmark: True
    max_epochs: 100
    check_val_every_n_epoch: 4
    accelerator: gpu
    devices: 2
    strategy:
        _target_: pytorch_lightning.strategies.ddp.DDPStrategy
        find_unused_parameters: False
    log_every_n_steps: 50
    logger:
        _target_: lighter.logger.LighterLogger
        save_dir: ${project}/logs/${now:}
        tensorboard: True
        wandb: True
        wandb_project: deepprognosis

    callbacks:
        - _target_: pytorch_lightning.callbacks.ModelCheckpoint
          dirpath: ${trainer.logger.save_dir}/checkpoints
          monitor: val/loss
          mode: min
          verbose: True
          save_last: True
          save_on_train_epoch_end: True

system:
    _target_: lighter.LighterSystem
    batch_size: 32
    pin_memory: True
    num_workers: 3
    log_input_as: null
    # log_pred_as: scalar  # TODO: breaking because it can't log a batch of scalars
    # log_target_as: scalar

    model:
        _target_: project.models.Resnet3D
        num_classes: 1
        pretrained: "/home/suraj/Repositories/lighter/projects/cancer-imaging-ssl/pretrained_model/model.torch"

    post_criterion_activation: ${import:torch.sigmoid}
    cast_target_dtype_to: ${import:torch.float}
    
    criterion:
        _target_: torch.nn.BCEWithLogitsLoss
        # # Disable ImbalancedSampler if using pos_weight
        # pos_weight:
        #     # pos_weight needs to be a tensor, instantiating one here
        #     _target_: torch.tensor
        #     _args_:
        #         - 7.739782016348774  # Calculated over the train set
    optimizers:
        _target_: torch.optim.Adam
        lr: 0.005
        weight_decay: 1e-5

    schedulers:
        _target_: torch.optim.lr_scheduler.ExponentialLR
        gamma: 0.95

    train_metrics:
        - _target_: torchmetrics.AveragePrecision
        - _target_: torchmetrics.AUC
          reorder: True

    val_metrics: ${system.train_metrics}
    test_metrics: ${system.train_metrics}

    train_dataset:
        _target_: project.datasets.CIDataset
        path: "/home/suraj/Repositories/cancer-imaging-ssl/src/pretraining/data_csv/deepprog/splits/train.csv"
        label: "survival"
        radius: 25
        orient: False
        resample_spacing: [1, 1, 1]
        transform:
            _target_: monai.transforms.Compose
            transforms:
                - _target_: monai.transforms.ToTensor
                - _target_: monai.transforms.EnsureChannelFirst
                - _target_: monai.transforms.SpatialPad
                  spatial_size: [50, 50, 50]
                - _target_: monai.transforms.RandGaussianSmooth
                  prob: 0.25
                - _target_: monai.transforms.RandAffine
                  prob: 0.5
                  translate_range: [10, 10, 10]
                - _target_: monai.transforms.RandAxisFlip
                  prob: 0.5
                - _target_: monai.transforms.RandRotate90
                  prob: 0.5
                - _target_: monai.transforms.NormalizeIntensity
                  subtrahend: -1024
                  divisor: 3072

    train_sampler:
        _target_: torchsampler.ImbalancedDatasetSampler
        # TODO: Workaround, it will reinstantiate it but that's ok in this case (wait for Hydra support),
        # https://github.com/facebookresearch/hydra/issues/1758
        dataset: ${system.train_dataset}

    val_dataset:
        _target_: project.datasets.CIDataset
        path: "/home/suraj/Repositories/cancer-imaging-ssl/src/pretraining/data_csv/deepprog/splits/val.csv"
        label: ${system.train_dataset.label}
        radius: ${system.train_dataset.radius}
        orient: ${system.train_dataset.orient}
        resample_spacing: ${system.train_dataset.resample_spacing}
        transform:
            _target_: monai.transforms.Compose
            transforms:
                - _target_: monai.transforms.ToTensor
                - _target_: monai.transforms.EnsureChannelFirst
                - _target_: monai.transforms.SpatialPad
                  spatial_size: [50, 50, 50]
                - _target_: monai.transforms.NormalizeIntensity
                  subtrahend: -1024
                  divisor: 3072
    test_dataset:
        _target_: project.datasets.CIDataset
        path: "/home/suraj/Repositories/cancer-imaging-ssl/src/pretraining/data_csv/deepprog/test.csv"
        label: ${system.train_dataset.label}
        radius: ${system.train_dataset.radius}
        orient: ${system.train_dataset.orient}
        resample_spacing: ${system.train_dataset.resample_spacing}
        transform:
            _target_: monai.transforms.Compose
            transforms:
                - _target_: monai.transforms.ToTensor
                - _target_: monai.transforms.EnsureChannelFirst
                - _target_: monai.transforms.SpatialPad
                  spatial_size: [50, 50, 50]
                - _target_: monai.transforms.NormalizeIntensity
                  subtrahend: -1024
                  divisor: 3072        
