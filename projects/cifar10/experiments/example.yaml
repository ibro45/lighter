project: ./projects/cifar10

trainer:
    _target_: pytorch_lightning.Trainer
    max_epochs: 100
    accelerator: cpu
    # devices: 1  # 2
    # strategy: ddp
    log_every_n_steps: 10
    logger: False
    callbacks:
        - _target_: lighter.callbacks.FileWriter
          path: '$f"{@project}/predictions"'
          writer: tensor

system:
    _target_: lighter.System

    model:
        _target_: "project.models.net.Net"

    criterion:
        _target_: torch.nn.CrossEntropyLoss
        _wrapper_:
            _target_: lighter.adapters.compose_adapters
            adapters:
                - _target_: lighter.adapters.postprocess_data
                  pred: "$lambda x: (x, print(x.shape))[0]"
                - _target_: lighter.adapters.map_data_to_arguments
                  pred: 0
                  target: 1


    optimizer:
        _target_: torch.optim.Adam
        params: "$@system#model.parameters()"
        lr: 0.001
        weight_decay: 0.00001

    metrics:
        train:
            - _target_: torchmetrics.Accuracy
              task: multiclass
              num_classes: 10
              average: macro
            - _target_: torchmetrics.F1Score
              task: multiclass
              num_classes: 10
              average: macro
            - _target_: torchmetrics.Precision
              task: multiclass
              num_classes: 10
              average: macro
            - _target_: torchmetrics.Recall
              task: multiclass
              num_classes: 10
              average: macro
        val: "%#train"
        test: "%#train"

    dataloaders:
        train:
            _target_: torch.utils.data.DataLoader
            batch_size: 512
            num_workers: 2
            pin_memory: True
            dataset:
                _target_: torchvision.datasets.CIFAR10
                download: True
                root: ./.datasets/
                train: True
                transform:
                    _target_: torchvision.transforms.Compose
                    transforms:
                        - _target_: torchvision.transforms.ToTensor
                        - _target_: torchvision.transforms.Normalize
                          mean: [0.5, 0.5, 0.5]
                          std: [0.5, 0.5, 0.5]
                _wrapper_:
                    _target_: lighter.adapters.structure_batch
                    input: 0
                    target: 1

        val:
            _target_: torch.utils.data.DataLoader
            batch_size: 512
            num_workers: 2
            pin_memory: True
            dataset:
                _target_: torchvision.datasets.CIFAR10
                download: True
                root: ./.datasets/
                train: False
                transform:
                    _target_: torchvision.transforms.Compose
                    transforms:
                        - _target_: torchvision.transforms.ToTensor
                        - _target_: torchvision.transforms.Normalize
                          mean: [0.5, 0.5, 0.5]
                          std: [0.5, 0.5, 0.5]
                _wrapper_:
                    _target_: lighter.adapters.structure_batch
                    input: 0
                    target: 1

        test: "%#val"
        predict: "%#val"
