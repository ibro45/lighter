project: ./projects/cifar10

trainer:
    _target_: pytorch_lightning.Trainer
    max_epochs: 50
    gpus: 0
    accelerator: null
    default_root_dir: ./logs
    logger:
        - _target_: pytorch_lightning.loggers.TensorBoardLogger
          save_dir: ${trainer.default_root_dir}
          name: tensorboard

        - _target_: pytorch_lightning.loggers.WandbLogger
          save_dir: ${trainer.default_root_dir}


system:
    _target_: lightningbringer.System
    batch_size: 512
    pin_memory: True
    num_workers: 4
    log_input_as: "image_batch"
    cast_target_dtype_to: torch.long
    model:
        _target_: project.models.net.Net
    # model:
    #     _target_: monai.networks.nets.EfficientNetBN
    #     model_name: efficientnet-b0
    #     pretrained: False
    #     spatial_dims: 2
    #     in_channels: 3
    #     num_classes: 10

    criterion:
        _target_: torch.nn.CrossEntropyLoss

    optimizers:
        _target_: torch.optim.Adam
        lr: 0.001
        weight_decay: 1e-5

    metrics:
        - _target_: torchmetrics.Accuracy
        - _target_: torchmetrics.F1Score

    train_dataset:
        _target_: torchvision.datasets.CIFAR10
        download: True
        root: ./.datasets/
        train: True
        transform:
            _target_: torchvision.transforms.Compose
            transforms:
                - _target_: torchvision.transforms.ToTensor
                - _target_: torchvision.transforms.Normalize
                  mean: [0.5, 0.5, 0.5]
                  std: [0.5, 0.5, 0.5]
        target_transform: null
    
    val_dataset:
        _target_: torchvision.datasets.CIFAR10
        download: False
        root: ./.datasets/
        train:  False  # Same as test, for prototyping purposes only
        transform:
            _target_: torchvision.transforms.Compose
            transforms:
                - _target_: torchvision.transforms.ToTensor
                - _target_: torchvision.transforms.Normalize
                  mean: [0.5, 0.5, 0.5]
                  std: [0.5, 0.5, 0.5]
        target_transform: null
    
    test_dataset:
        _target_: torchvision.datasets.CIFAR10
        download: False
        root: ./.datasets/
        train: False
        transform:
            _target_: torchvision.transforms.Compose
            transforms:
                - _target_: torchvision.transforms.ToTensor
                - _target_: torchvision.transforms.Normalize
                  mean: [0.5, 0.5, 0.5]
                  std: [0.5, 0.5, 0.5]
        target_transform: null
