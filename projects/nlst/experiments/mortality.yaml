project: /home/ibrahim/projects/lightningbringer/projects/nlst

trainer:
    _target_: pytorch_lightning.Trainer
    max_epochs: 5000
    gpus: 1
    precision: 16
    accelerator: null
    deterministic: True
    default_root_dir: /home/ibrahim/projects/lightningbringer/projects/nlst/logs
    logger:
        - _target_: pytorch_lightning.loggers.WandbLogger
          save_dir: ${trainer.default_root_dir}
          project: mortality


system:
    _target_: lightningbringer.System
    batch_size: 8
    pin_memory: True
    num_workers: 8
    log_input_as: null
    log_pred_as: scalar
    log_target_as: scalar

    model:
        _target_: project.models.EfficientNet
        model_name: efficientnet-b0
        pretrained: False
        spatial_dims: 3
        in_channels: 1
        num_classes: 1
        last_activation:
            _target_: torch.nn.Identity  # Because using BCEWithLogitsLoss

    cast_target_dtype_to: torch.float
    criterion:
        _target_: torch.nn.BCEWithLogitsLoss

    optimizers:
        _target_: torch.optim.Adam
        lr: 0.001
        weight_decay: 1e-5

    metrics:
        - _target_: torchmetrics.Accuracy
        - _target_: torchmetrics.F1Score

    train_dataset:
        _target_: project.datasets.NLSTDataset
        mode: train
        root_dir: /mnt/ssd1/NLST/
        label: fup_days
        hounsfield_units_range: [-1000, 400]
        patch_size: [96, 304, 392]  # [128, 304, 392]
        prototyping_num_scans: 10

    train_sampler:
        _target_: torchsampler.ImbalancedDatasetSampler
        # TODO: Workaround, it will reinstantiate it but that's ok in this case (wait for Hydra support)
        dataset: ${system.train_dataset}

    val_dataset:
        _target_: project.datasets.NLSTDataset
        mode: tune
        root_dir: /mnt/ssd1/NLST/
        label: fup_days
        hounsfield_units_range: ${system.train_dataset.hounsfield_units_range}
        patch_size: ${system.train_dataset.patch_size}
        prototyping_num_scans: 10

    test_dataset:
        _target_: project.datasets.NLSTDataset
        mode: test
        root_dir: /mnt/ssd1/NLST/
        label: fup_days
        hounsfield_units_range: ${system.train_dataset.hounsfield_units_range}
        patch_size: ${system.train_dataset.patch_size}
        prototyping_num_scans: 10

    patch_based_inferer:
        _target_: patch_inferers.AvgPatchInferer
        batch_size: ${system.batch_size}
        patch_size: ${system.train_dataset.patch_size}
        patch_overlap: [4, 4, 4]
